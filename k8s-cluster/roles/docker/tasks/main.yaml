---
# Reference: https://kubernetes.io/blog/2019/03/15/kubernetes-setup-using-ansible-and-vagrant/

# Install Docker and its dependent components.
- name: Install aptitude using apt
  apt: 
    name: aptitude
    state: latest
    update_cache: yes
    force_apt_get: yes
  become: yes

- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common
    - python3-pip
    - python3-setuptools
  become: yes

- name: Add an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: yes

- name: Add Docker Repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    state: present
  become: yes

- name: Update apt and install docker-ce
  apt: 
    name: docker-ce
    update_cache: yes
    state: latest
  become: yes

- name: Install docker and its dependecies
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - docker-ce 
    - docker-ce-cli 
    - containerd.io
  notify:
    - docker status
  become: yes

- name: Add vagrant user to docker group
  user:
    name: vagrant
    group: docker
  become: yes

# Kubelet will not start if the system has swap enabled, so we are disabling swap using the below code.
- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

# Installing kubelet, kubeadm and kubectl using the below code.
- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  become: yes

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list
  become: yes

- name: Install Kubernetes binaries
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet 
      - kubeadm 
      - kubectl
  become: yes

# - name: Configure node ip
#   lineinfile:
#     path: /etc/default/kubelet
#     line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted
  become: yes
...
